/*
 * This file is generated by jOOQ.
 */
package generated.jooq;


import generated.jooq.tables.Container;
import generated.jooq.tables.Design;
import generated.jooq.tables.Organisation;
import generated.jooq.tables.SubContainer;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>container</code>.
     */
    public final Container CONTAINER = Container.CONTAINER;

    /**
     * The table <code>design</code>.
     */
    public final Design DESIGN = Design.DESIGN;

    /**
     * The table <code>organisation</code>.
     */
    public final Organisation ORGANISATION = Organisation.ORGANISATION;

    /**
     * The table <code>sub_container</code>.
     */
    public final SubContainer SUB_CONTAINER = SubContainer.SUB_CONTAINER;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super(DSL.name(""), null, DSL.comment(""));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Container.CONTAINER,
            Design.DESIGN,
            Organisation.ORGANISATION,
            SubContainer.SUB_CONTAINER
        );
    }
}
